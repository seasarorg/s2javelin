################################################################################
# S2Javelin Configurations
################################################################################

#--------------------------------------------------
# 動作解析用ログ設定
#--------------------------------------------------

# Javelinの動作状況を出力するシステムログの出力先ディレクトリ。
javelin.system.log=../traces

# システムログの最大ファイルサイズ(byte)
javelin.system.log.size.max=1000000

# システムログの最大ファイル数
javelin.system.log.num.max=16

#--------------------------------------------------
# ファイル出力パスの設定
#--------------------------------------------------

# jvnファイルを出力するディレクトリへのパス。
javelin.javelinFileDir=../logs

# 閾値等の情報の永続化用ファイル
javelin.serializeFile=../data/serialize.dat

#--------------------------------------------------
# 出力ログファイル数の設定
#--------------------------------------------------

# jvnログの最大ファイル数
javelin.log.jvn.max=256

# jvnログファイルの圧縮閾値（出力ファイル数がこの数に達した時に、ログファイルをzip化します。）
javelin.log.zip.max=256

#--------------------------------------------------
# 出力ログファイルの内容
#--------------------------------------------------

# メソッド呼び出しの引数情報を出力する。
javelin.log.args=true

# メソッド呼び出しの戻り値情報を出力する。
javelin.log.return=true

# メソッド呼び出しの時のスタックトレースを出力する。
javelin.log.stacktrace=false

# VMのMBean情報を出力する。
javelin.log.jmxinfo=true

# メソッド呼び出しのルートノードにつける名前。
javelin.rootCallerName=root

# メソッド呼び出しのエンドノードの名前が決定できない場合につける名前。
javelin.endCalleeName=unknown

# スレッドの名称の決定方法
# 0:スレッド名@スレッドID(スレッドクラス名@オブジェクトID)
# 1:スレッドID
# 2:スレッド名
# 3:メソッド名（Servletフィルタ組み込み時にはサーブレットパスとなる。）
javelin.threadModel=3

#--------------------------------------------------
# 通信設定
#--------------------------------------------------

# BottleneckEyeとの通信に使用するポート番号
javelin.acceptPort=18000

# JMXのHTTPAdaptorを公開するポート番号（0の場合は使用しない）
javelin.httpPort=0

# JMXでのMBeanの登録に使用するドメイン名。
javelin.domain=default

#--------------------------------------------------
# 統計処理
#--------------------------------------------------

# メモリ中に蓄積する(メソッド毎の)呼び出し情報の件数
javelin.intervalMax=500

# メモリ中に蓄積する(メソッド毎の)例外発生情報の件数
javelin.throwableMax=500

#--------------------------------------------------
# 閾値判定方式
#--------------------------------------------------

# 最大ターンアラウンドタイムを更新したときにログ出力を行う。
# ただし、HotSpotコンパイルを考慮して、
# 最初の数回は無条件にログファイルを出力しない。
#javelin.recordStrategy=org.seasar.javelin.MaxAccumulatedTimeUpdateRecordStrategy

# 閾値の時間設定にしたがって、ログファイルの出力やアラームの通知を行う。
javelin.recordStrategy=org.seasar.javelin.DefaultRecordStrategy

#--------------------------------------------------
# 各種閾値
#--------------------------------------------------

# 呼び出し情報の蓄積を行うターン・アラウンド・タイムの閾値(単位:ミリ秒)
javelin.statisticsThreshold=0

# ファイル出力を行うターン・アラウンド・タイムの閾値(単位:ミリ秒)
javelin.recordThreshold=5000

# BottleneckEyeへの通知を行うターン・アラウンド・タイムの閾値(単位:ミリ秒)
javelin.alarmThreshold=5000
